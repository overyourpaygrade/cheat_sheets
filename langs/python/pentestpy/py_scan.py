#!/usr/bin/python
import socket, argparse, sys
import logging

def main():

    parser = argparse.ArgumentParser(description='py_scan.py -t [IP] -r 10 20')
    parser.add_argument('-t', dest='target', help='')
    parser.add_argument('-l', dest='debug', default=50, help='')
    parser.add_argument('-r', dest='p_range', type=int, nargs=2, help='')
    args = parser.parse_args()

    level = args.debug
    logging.basicConfig(level=level)
    logger = logging.getLogger(__name__)
    
    if not args.target:
        print "Enter a target"
        parser.print_help()
        sys.exit(1)

    print ""
    
    try:
        for port in range(min(args.p_range), max(args.p_range)):
            socket.setdefaulttimeout(0.5)
            s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
            result = s.connect_ex((args.target, port))
            logger.debug('Records: %s', result)
            if result == 0:
                print "Port {}: \t Open".format(port)
                if port == 80:
                    s.send("HEAD / HTTP/1.0\r\n\r\n") 
                    #continue
                try:
                    banner = s.recv(1024)
                    print banner
                except socket.error:
                    pass
            s.close()
    except Exception:
       raise 


if __name__ == '__main__':

    main()
